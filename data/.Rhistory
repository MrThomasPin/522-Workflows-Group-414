caption = "Preliminary Confusion Matrix",
escape = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
knitr::include_graphics("../img/02_confusion_matrix.png")
library(kableExtra)
object <- {
"| Variable             | Type             | Description                                                                                                                            |
|----------------------|------------------|----------------------------------------------------------------------------------------------------------------------------------------|
| A1_score             | Int (0,1)        | Prompt: I often notice small sounds when others do not                                                                                 |
| A2_score             | Int (0,1)        | Prompt: I usually concentrate more on the whole picture, rather than the small details                                                 |
| A3_score             | Int (0,1)        | Prompt: I find it easy to do more than one thing at once                                                                               |
| A4_score             | Int (0,1)        | Prompt: If there is an interruption, I can switch back to what I was doing very quickly                                                |
| A5_score             | Int (0,1)        | Prompt: I find it easy to 'read between the lines' when someone is talking to me                                                       |
| A6_score             | Int (0,1)        | Prompt: I know how to tell if someone listening to me is getting bored                                                                 |
| A7_score             | Int (0,1)        | Prompt: When I'm reading a story I find it difficult to work out the characters' intentions                                            |
| A8_score             | Int (0,1)        | Prompt: I like to collect information about categories of things(e.g. types of car, types of bird, types of train, types of plant etc) |
| A9_score             | Int (0,1)        | Prompt: I find it easy to work out what someone is thinking or feeling just by looking at their face                                   |
| A10_score            | Int (0,1)        | Prompt: I find it difficult to work out people's intentions                                                                            |
| Age                  | Int              | Age of the individual                                                                                                                  |
| Gender               | String           | M (male) or F (female)                                                                                                                 |
| Ethnicity            | String           | Common Ethnicities defined for each individual                                                                                         |
| Born with Jaundice?  | String (yes,no)  | Was individual born with jaundice?                                                                                                     |
| Country of Residence | String           | Home country of individual                                                                                                             |
| Used app before?     | String (yes, no) | Has the user has used a screening app                                                                                                  |
| Result               | Int              | Cumulative score of the 10 survey Q's                                                                                                  |
| age_desc             | String           | Age Group                                                                                                                              |
| relation             | String           | Parent, self, caregiver, medical staff, clinician ,etc.                                                                                |
| ASD/Class            | String (yes, no) | App's classification based on result                                                                                                   |
| autism (Target Variable)  | String (yes, no) | Does individual have an autism diagnosis?
"
}
data_frame <- read_delim(object, delim = '|')
data_frame <- data_frame %>% select(-X5, -X1) %>% slice(-1)
knitr::kable(data_frame) %>% kable_styling(bootstrap_options = "condensed", full_width = F, fixed_thead = TRUE)
knitr::include_graphics("../img/01_corr_heatmap.png")
knitr::include_graphics("../img/03_prop_result.png")
# knitr::include_graphics("../img/all-features-classification-report.png")
conf1<-read.csv("data/conf1")
# knitr::include_graphics("../img/all-features-classification-report.png")
getwd()
# knitr::include_graphics("../img/all-features-classification-report.png")
conf1<-read.csv("../data/conf1")
names(conf1) <- c("", "Does not have autism", "Has autism")
kable(conf1, align="c",
caption = "Preliminary Confusion Matrix",
format="markdown")
conf1
conf1[1]
conf1[2]
conf1[3, 2]
conf1[3,]
conf1[2,3]
conf1[1,3]
TP <- conf1[2,3]
conf1
conf1[1,3]
FN <- conf1[1,3]
TP/(TP+FP)
TP/(TP+FN)
TP <- conf1[2,3]
FN <- conf1[1,3]
# knitr::include_graphics("../img/all-features-classification-report.png")
conf1<-read.csv("../data/conf1")
names(conf1) <- c("", "Does not have autism", "Has autism")
kable(conf1, align="c",
caption = "Preliminary Confusion Matrix",
format="markdown")
# knitr::include_graphics("../img/all-features-classification-report.png")
conf1<-read.csv("../data/conf1")
names(conf1) <- c("", "Does not have autism", "Has autism")
kable(conf1, align="c",
caption = "Preliminary Confusion Matrix",
format="markdown")
# knitr::include_graphics("../img/all-features-testset-classification-report.png")
conf2<-read.csv("../data/conf2")
names(conf2) <- c("", "Does not have autism", "Has autism")
kable(conf2, align="c",
caption = "Final Confusion Matrix",
format="markdown")
TP <- conf2[2,3]
FN <- conf2[1,3]
TP <- conf2[2,3]
FN <- conf2[1,3]
TP
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
knitr::include_graphics("../img/02_confusion_matrix.png")
library(kableExtra)
object <- {
"| Variable             | Type             | Description                                                                                                                            |
|----------------------|------------------|----------------------------------------------------------------------------------------------------------------------------------------|
| A1_score             | Int (0,1)        | Prompt: I often notice small sounds when others do not                                                                                 |
| A2_score             | Int (0,1)        | Prompt: I usually concentrate more on the whole picture, rather than the small details                                                 |
| A3_score             | Int (0,1)        | Prompt: I find it easy to do more than one thing at once                                                                               |
| A4_score             | Int (0,1)        | Prompt: If there is an interruption, I can switch back to what I was doing very quickly                                                |
| A5_score             | Int (0,1)        | Prompt: I find it easy to 'read between the lines' when someone is talking to me                                                       |
| A6_score             | Int (0,1)        | Prompt: I know how to tell if someone listening to me is getting bored                                                                 |
| A7_score             | Int (0,1)        | Prompt: When I'm reading a story I find it difficult to work out the characters' intentions                                            |
| A8_score             | Int (0,1)        | Prompt: I like to collect information about categories of things(e.g. types of car, types of bird, types of train, types of plant etc) |
| A9_score             | Int (0,1)        | Prompt: I find it easy to work out what someone is thinking or feeling just by looking at their face                                   |
| A10_score            | Int (0,1)        | Prompt: I find it difficult to work out people's intentions                                                                            |
| Age                  | Int              | Age of the individual                                                                                                                  |
| Gender               | String           | M (male) or F (female)                                                                                                                 |
| Ethnicity            | String           | Common Ethnicities defined for each individual                                                                                         |
| Born with Jaundice?  | String (yes,no)  | Was individual born with jaundice?                                                                                                     |
| Country of Residence | String           | Home country of individual                                                                                                             |
| Used app before?     | String (yes, no) | Has the user has used a screening app                                                                                                  |
| Result               | Int              | Cumulative score of the 10 survey Q's                                                                                                  |
| age_desc             | String           | Age Group                                                                                                                              |
| relation             | String           | Parent, self, caregiver, medical staff, clinician ,etc.                                                                                |
| ASD/Class            | String (yes, no) | App's classification based on result                                                                                                   |
| autism (Target Variable)  | String (yes, no) | Does individual have an autism diagnosis?
"
}
data_frame <- read_delim(object, delim = '|')
data_frame <- data_frame %>% select(-X5, -X1) %>% slice(-1)
knitr::kable(data_frame) %>% kable_styling(bootstrap_options = "condensed", full_width = F, fixed_thead = TRUE)
knitr::include_graphics("../img/01_corr_heatmap.png")
knitr::include_graphics("../img/03_prop_result.png")
# knitr::include_graphics("../img/all-features-classification-report.png")
conf1<-read.csv("../data/conf1")
names(conf1) <- c("", "Does not have autism", "Has autism")
kable(conf1, align="c",
caption = "Preliminary Confusion Matrix",
format="markdown")
TP <- conf1[2,3]
FN <- conf1[1,3]
# knitr::include_graphics("../img/all-features-testset-classification-report.png")
conf2<-read.csv("../data/conf2")
names(conf2) <- c("", "Does not have autism", "Has autism")
kable(conf2, align="c",
caption = "Final Confusion Matrix",
format="markdown")
TP <- conf2[2,3]
FN <- conf2[1,3]
TP
conf2<-read.csv("../data/conf2")
conf2
# knitr::include_graphics("../img/all-features-testset-classification-report.png")
conf2<-read.csv("../data/conf2")
names(conf2) <- c("", "Predicted no autism", "Predicted autism")
kable(conf2, align="c",
caption = "Final Confusion Matrix",
format="markdown")
TP <- conf2[2,3]
FN <- conf2[2,2]
FN
# knitr::include_graphics("../img/all-features-testset-classification-report.png")
conf2<-read.csv("../data/conf2")
names(conf2) <- c("", "Predicted no autism", "Predicted autism")
kable(conf2, align="c",
caption = "Final Confusion Matrix",
format="markdown")
TP <- conf1[2,3]
FN <- conf2[2,2]
# knitr::include_graphics("../img/all-features-classification-report.png")
conf1<-read.csv("../data/conf1")
names(conf1) <- c("", "Predicted no autism", "Predicted autism")
kable(conf1, align="c",
caption = "Preliminary Confusion Matrix",
format="markdown")
TP <- conf1[2,3]
FN <- conf2[2,2]
TP/(TP+FN)
TP <- conf1[2,3]
FN <- conf1[2,2]
library(MASS)
library(survival)
library(tidyverse)
library(ggfortify)
library(ggplot2)
library(broom)
suppressPackageStartupMessages(library(coxed))
lung_filtered <- lung %>% filter(ph.ecog != NA | ph.ecog != 3)
surv_model <- survfit(Surv(time, status) ~ 1, data = lung_filtered)
surv_model_w <- survreg(Surv(time, status) ~ 1, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
glance(surv_model)$rmean
# What about quantiles, are there any quantiles that cannot be estimated using this survival function? Why or why not?
glance(surv_model)$median
k <- shape
lam <- scale
lam * gamma(1 + (1/k))
quantile(lung_filtered$time, probs = c(0.25, 0.5, 0.75))
quantile(lung_filtered$time, probs = c(1, 0.5, 0.75))
quantile(lung_filtered$time, probs = c(1, 0.5, 0))
quantile(lung_filtered$time, probs = c(1, 0.5, -0))
quantile(lung_filtered$time, probs = c(1, 0.5, -0.5))
quantile(lung_filtered$time, probs = c(1, 0.5, 0))
quantile(surv_model, probs = c(1, 0.5, 0))
quantile(surv_model, probs = c(0.25, 0.5, 0.75))
quantile(surv_model, probs = c(0.25, 0.5, 0.95))
quantile(surv_model, probs = c(0.25, 0.5, 0.75))
quantile(surv_model, probs = c(0.25, 0.5, 0.8))
quantile(surv_model, probs = c(0.25, 0.5, 0.9))
quantile(surv_model, probs = c(0.25, 0.5, 0.95))
quantile(surv_model, probs = c(0.25, 0.5, 0.95))$quantile
lam * (log(2))^(1/k)
mean_w <- lam * gamma(1 + (1/k))
median_w <- lam * (log(2))^(1/k)
# Mean and median for Weibull distribution
k <- shape
lam <- scale
mean_w <- lam * gamma(1 + (1/k))
median_w <- lam * (log(2))^(1/k)
mean_w
median_w
surv_model <- survfit(Surv(time, status) ~ age, data = lung_filtered)
surv_model_w <- survreg(Surv(time, status) ~ age, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
glance(surv_model)$rmean
lung_filtered
surv_model <- survfit(Surv(time, status) ~ 1, data = lung_filtered)
surv_model_w <- survreg(Surv(time, status) ~ age, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
lung_filtered <- lung %>% filter(ph.ecog != NA | ph.ecog != 3)
surv_model <- survfit(Surv(time, status) ~ 1, data = lung_filtered)
surv_model_w <- survreg(Surv(time, status) ~ age, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
glance(surv_model)$rmean
# What about quantiles, are there any quantiles that cannot be estimated using this survival function? Why or why not?
glance(surv_model)$median
# Mean and median for Weibull distribution
k <- shape
lam <- scale
mean_w <- lam * gamma(1 + (1/k))
median_w <- lam * (log(2))^(1/k)
mean_w
median_w
surv_model_w <- survreg(Surv(time, status) ~ wt.loss, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
surv_model_w <- survreg(Surv(time, status) ~ 1, data = lung_filtered, dist ='weibull')
# Mean and median for Weibull distribution
k <- shape
lam <- scale
mean_w <- lam * gamma(1 + (1/k))
median_w <- lam * (log(2))^(1/k)
mean_w
median_w
lung_filtered <- lung %>% filter(ph.ecog != NA | ph.ecog != 3)
surv_model <- survfit(Surv(time, status) ~ 1, data = lung_filtered)
surv_model_w <- survreg(Surv(time, status) ~ 1, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
lung_filtered <- lung %>% filter(ph.ecog != NA | ph.ecog != 3)
surv_model <- survfit(Surv(time, status) ~ 1, data = lung_filtered)
surv_model_w <- survreg(Surv(time, status) ~ age, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
surv_model <- survfit(Surv(time, status) ~ age, data = lung_filtered)
surv_model_w <- survreg(Surv(time, status) ~ age, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
surv_model <- survfit(Surv(time, status) ~ 1, data = lung_filtered)
surv_model_w <- survreg(Surv(time, status) ~ 1, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
lung_filtered %>%
filter(status == 1) %>%
.[["time"]] %>%
mean()
lung_filtered %>%
filter(status == 1) %>%
.[["time"]] %>%
median()
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog)) +
theme_bw(20) +
labs(x = "Age", y = "Time")
?survreg
lung_filtered <- lung %>% filter(ph.ecog != NA | ph.ecog != 3)
surv_model <- survfit(Surv(time, status) ~ 1, data = lung_filtered)
surv_model_w <- survreg(Surv(time, status) ~ 1, data = lung_filtered, dist ='weibull')
shape <- 1/surv_model_w$scale
scale <- exp(surv_model_w$coefficients)
autoplot(surv_model) +
stat_function(fun=pweibull, args = list(shape, scale, lower.tail=FALSE), color="blue")
glance(surv_model)$rmean
# What about quantiles, are there any quantiles that cannot be estimated using this survival function? Why or why not?
glance(surv_model)$median
# Mean and median for Weibull distribution
k <- shape
lam <- scale
mean_w <- lam * gamma(1 + (1/k))
median_w <- lam * (log(2))^(1/k)
mean_w
median_w
cox_model <- coxph(Surv(time, status) ~ ph.ecog + age, data = lung_filtered)
(cox_model)
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = c("t","t","t")) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = c("t")) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = c("t"),
cols = 3) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = c("t"),
cols = 3,
rows = 1) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = c("t", "t", "t"),
cols = 3,
rows = 1) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(c("t", "t", "t")),
cols = 3,
rows = 1) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(c(ph.ecog = capitalize)),
cols = 3,
rows = 1) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(c(ph.ecog = capitalize))) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(ph.ecog = capitalize)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(ph.ecog)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(ph.ecog = label_wrap_gen)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(ph.ecog = label_value)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
p3 <- ggplot(msleep, aes(x = sleep_total, y = awake)) + geom_point()
p3 +
facet_grid(vore ~ conservation2,
labeller = labeller(conservation2 = label_wrap_gen(10))
)
p1 + facet_grid(
vs + am ~ gear,
labeller = labeller(.rows = label_both, .cols = label_value)
)
p1 <- ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point()
# You can assign different labellers to variables:
p1 + facet_grid(
vs + am ~ gear,
labeller = labeller(vs = label_both, am = label_value)
)
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(ph.ecog = label_both)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(ph.ecog = label_both)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
p1 + facet_grid(
vs + am ~ gear,
labeller = labeller(.rows = label_both, .cols = label_value)
)
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(.rows = label_both)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(.rows = label_both)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~as.factor(ph.ecog),
labeller = labeller(.cols = label_both)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~(ph.ecog),
labeller = labeller(.cols = label_both)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
lung_filtered %>%
ggplot(aes(x = age, y = time)) +
geom_point(aes(color=as.factor(status)), size = 2) +
scale_color_discrete(name="Censored \nstatus", labels = c("Died", "Ongoing")) +
facet_grid(~ph.ecog,
labeller = labeller(.cols = label_both)) +
theme_bw(20) +
labs(x = "Age", y = "Time", title = "Survival Time For\nLung Cancer")
cox_model <- coxph(Surv(time, status) ~ ph.ecog + age, data = lung_filtered)
(cox_model)
predict(cox_model, lung_filtered[2,c(1,4:10)])
surv_fit_cox <- survfit(cox_model,
lung_filtered[2,c(1,4:10)])
quantile(surv_fit_cox, probs=0.8)
# autoplot(surv_fit_cox, probs = 0.8)
